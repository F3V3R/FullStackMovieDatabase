plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
	id "com.github.node-gradle.node" version "3.2.1"
}

group = 'io.github.vlasopoulos'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootBuildImage{
	imageName 'vlasopoulos/fullstackmoviedatabase'
}


task appNpmInstall(type: NpmTask) {
	description = "Installs all dependencies from package.json"
	workingDir = file("${project.projectDir}/src/main/frontend")
	args = ["install"]
}

task appNpmBuild(type: NpmTask) {
	description = "Builds production version of the frontend"
	workingDir = file("${project.projectDir}/src/main/frontend")
	args = ["run", "build"]
}

task copyWebApp(type: Copy) {
	from 'src/main/frontend/build'
	into 'build/resources/main/static/.'
}

appNpmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn appNpmBuild
compileJava.dependsOn copyWebApp

node {
	download = true
	workDir = file("${project.projectDir}/.gradle/nodejs")
	npmWorkDir = file("${project.projectDir}/.gradle/npm")
	nodeProjectDir = file("${project.projectDir}/src/main/frontend")
}